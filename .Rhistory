install.packages("rmarkdown"")
install.packages("rmarkdown")
install.packages("rmarkdown")
getwd()
setwd('C://MOOC//ReproducibleResearch//')
setwd('C://MOOC//ReproducibleResearch//')
a <- read.csv('activity.csv')
View(a)
table(a$steps)
histogram(a$steps)
mean(a$steps)
mean(as.numeric(a$steps))
max(as.numeric(a$steps))
max((a$steps), na.rm=T)
mean((a$steps), na.rm=T)
median((a$steps), na.rm=T)
median((a$steps), na.rm=T)
median((a$steps), na.rm=T)
max((a$steps), na.rm=T)
View(a)
r <-aggregate(mtcars, by=date,
FUN=sum, na.rm=TRUE)
r <-aggregate(mtcars, by=list(date, steps),
FUN=sum, na.rm=TRUE)
r <-aggregate(mtcars, by=list(date),
FUN=sum, na.rm=TRUE)
r <-aggregate(a, by=list(date),
FUN=sum, na.rm=TRUE)
r <-aggregate(a, by=list(date,steps),
FUN=sum, na.rm=TRUE)
r <-aggregate(a, by=list(date,steps),
FUN=mean, na.rm=TRUE)
r <-aggregate(a, by=list(a$date,a$steps),
FUN=mean, na.rm=TRUE)
r <-aggregate(a, by=list(a$date,a$steps),
FUN=sum, na.rm=TRUE)
r <-aggregate(a, by=list(a$date,a$steps),
FUN=sum(.na.rm=FALSE), na.rm=TRUE)
r <-aggregate(a, by=list(a$date),
FUN=sum, na.rm=TRUE)
r <-aggregate(a, by=list(a$steps),
FUN=sum, na.rm=TRUE)
r <-aggregate(a, by=list(as.numeric(a$steps)),
FUN=sum, na.rm=TRUE)
summarize(a)
summary(a)
r <-aggregate(a$steps, by=list(a$date),
FUN=sum, na.rm=TRUE)
r
r <-aggregate(a$steps, by=list(a$date),
FUN=sum, na.rm=TRUE)
names(r)
mean(r$x)
median(r$x)
str(r)
r <-aggregate(a$steps, by=list(a$date), FUN=sum, na.rm=TRUE)
colnames(r)[Group.1] <- "date"
colnames(r)[x] <- "StepsPerDay"
r <-aggregate(a$steps, by=list(a$date), FUN=sum, na.rm=TRUE)
colnames(r) <- c("date", "StepsPerDay")
names(r)
View(r)
table(r$StepsPerDay)
table(r$StepsPerDay, exclude=NA)
m <- mean(r$StepsPerDay[r$StepsPerDay!=0])
m
med <- median(r$StepsPerDay[r$StepsPerDay!=0])
table(r$StepsPerDay[r$StepsPerDay!=0])
table(r$StepsPerDay)
me <- mean(r$StepsPerDay[r$StepsPerDay!=0])
me
med
plot(a$steps, type="1")
plot(a$steps)
plot(a$steps, type="1")
plot(a$steps, type="l")
plot(a$steps, type="l")
plot(r$StepsPerDay, type="l")
plot(a$steps, type="l")
r <-aggregate(a$steps, by=list(a$date), FUN=avg, na.rm=TRUE)
r <-aggregate(a$steps, by=list(a$date), FUN=mean, na.rm=TRUE)
r
View(a)
table(a$steps, a$interval)
r <-aggregate(a$steps, by=list(a$date, a$interval), FUN=max, na.rm=TRUE)
r
r <-aggregate(a$steps, by=list(a$date), FUN=max, na.rm=TRUE)
r <-aggregate(a$steps, by=list(a$interval), FUN=max, na.rm=TRUE)
r
r <-aggregate(a$steps, by=list(a$interval), FUN=mean, na.rm=TRUE)
r
i <-aggregate(a$steps, by=list(a$interval), FUN=mean, na.rm=TRUE)
colnames(i) <- c("interval", "meansteps")
r <-aggregate(a$steps, by=list(a$interval), FUN=mean, na.rm=TRUE)
names(a)
i$interval[max(i$meansteps)]
View(i[i$interval==1705])
View(i[i$interval=='1705'])
View(i[i$interval=='1705'])
names(i)
View(i[i$interval='1705'])
i
max(i$meansteps)
View(subset(i, max(i$meansteps)))
View(subset(i, i$meansteps==max(i$meansteps)))
i
plot(f$avg5, type="1")
plot(i$interval, i$meansteps, type='l')
i
nmv <- nrow(a[is.na(a$steps)])
nmv <- nrow(a[,is.na(a$steps)])
nmv <- nrow(a[a$steps="NA"])
c <- nrow(a[a$steps!="NA"])
nmv <- nrow(a[a$steps=="NA"])
c <- nrow(a[a$steps!="NA"])
nmv <- nrow(a[a$steps=="NA"])
a
names(a)
a[a$steps=="0"]
a[,a$steps=="0"]
a$steps[,a$steps=="0"]
a$steps[a$steps=="0"]
nmv <- nrow(a$steps[a$steps=="NA"])
a$steps[a$steps=="0"]
nmv
nmv <- nrow(a$steps[is.na(a$steps)])
nmv
nmv <- a$steps[is.na(a$steps)]
nmv
nmv <- nrow(a$steps[a$steps=='NA'])
nmv
length(a$steps[a$steps=='NA'])
length(a$steps[is.na(a$steps)])
length(a$steps[!is.na(a$steps)])
length(a$steps)
15264+2304
#impute m
imp <- a
imp$steps[is.na(df$steps)] <- mean(a$steps, na.rm=TRUE)
View(a)
imp <- a
imp <- merge(a, i, by="interval", suffixes=c(".Orig", ".Mean"))
View(imp)
names(imp)
imp$steps = ifelse(is.na(imp$steps), i$steps.Mean, a$steps.Orig))
imp$steps <- ifelse(is.na(imp$steps), imp$steps.Mean, imp$steps.Orig))
imp <- merge(a, i, by="interval"))
imp$steps <- ifelse(is.na(imp$steps), imp$steps.Mean, imp$steps.Orig))
imp <- merge(a, i, by="interval")
imp$steps <- ifelse(is.na(imp$steps), imp$steps.Mean, imp$steps.Orig)
imp <- merge(a, i, by="interval")
imp$steps <- ifelse(is.na(imp$steps), imp$meansteps, imp$steps)
View(imp)
imp <- a
imp <- merge(a, i, by="interval")
imp$steps <- ifelse(is.na(imp$steps), imp$meansteps, imp$steps)
#calculate steps per day
imp.r <-aggregate(imp$steps, by=list(imp$date), FUN=sum, na.rm=TRUE)
colnames(imp.r) <- c("date", "StepsPerDay")
imp.me <- mean(imp.r$StepsPerDay[imp.r$StepsPerDay!=0])
imp.med <- median(imp.r$StepsPerDay[imp.r$StepsPerDay!=0])
weekdays(a$date)
weekdays(as.date(a$date))
weekdays(as.Date(a$date))
a$dayname <- weekdays(as.Date(a$date))
a$weekend <- ifelse(a$dayname %in% c("Saturday", "Sunday"), "TRUE", "FALSE")
```
a$dayname <- weekdays(as.Date(a$date))
names(a)
a$weekend <- ifelse(a$dayname %in% c("Saturday", "Sunday"), "TRUE", "FALSE")
View(a)
str(a)
a$weekend <- as.factor(a$weekend)
str(a)
View(a)
par(mfrow=c(1,1))
plot(mtcars$wt,mtcars$mpg, main="weekdays")
plot(mtcars$wt,mtcars$disp, main="weekend")
par
install.packages("lattice")
xyplot(meansteps | weekend,
data = a,
type = "l",
lty = c(1, 2,),
lwd = c(1, 1,),
col.line = c(rep("black",3), "red"))
library(lattice)
xyplot(meansteps | weekend,
data = a,
type = "l",
lty = c(1, 2,),
lwd = c(1, 1,),
col.line = c(rep("black",3), "red"))
xyplot(a$meansteps | a$weekend,
data = a,
type = "l",
lty = c(1, 2,),
lwd = c(1, 1,),
col.line = c(rep("black",3), "red"))
xyplot(a$meansteps | a$weekend,
data = a,
type = "l")
?xyplot()
xyplot(a$meansteps ~ a$interval | a$weekend,
data = a,
type = "l")
xyplot(a$meansteps ~ a$interval | a$weekend,
data = a,
type = "l",
lty = c(1, 2, 2, 1),
lwd = c(1, 1, 1, 3),
col.line = c(rep("black",3), "red"))
xyplot(a$steps ~ a$interval | a$weekend,
data = a,
type = "l",
lty = c(1, 2, 2, 1),
lwd = c(1, 1, 1, 3),
col.line = c(rep("black",3), "red"))
i$dayname <- weekdays(as.Date(i$date))
i$weekend <- "FALSE"
i$weekend <- ifelse(i$dayname %in% c("Saturday", "Sunday"), "TRUE", "FALSE")
xyplot(i$meansteps ~ i$interval | i$weekend,
data = i,
type = "l",
lty = c(1, 2, 2, 1),
lwd = c(1, 1, 1, 3),
col.line = c(rep("black",3), "red"))
i$dayname <- weekdays(as.Date(i$date))
i$weekend <- "FALSE"
i$weekend <- ifelse(i$dayname %in% c("Saturday", "Sunday"), "TRUE", "FALSE")
i$dayname <- weekdays(as.Date(i$date))
i$weekend <- "FALSE"
i$weekend <- ifelse(i$dayname %in% c("Saturday", "Sunday"), "TRUE", "FALSE")
i$dayname <- weekdays(as.Date(i$date))
names(i)
a$dayname <- weekdays(as.Date(a$date))
a$weekend <- "FALSE"
a$weekend <- ifelse(a$dayname %in% c("Saturday", "Sunday"), "TRUE", "FALSE")
p <- merge(a, i, by.x="interval")
i <-aggregate(a$steps, by=list(a$interval, a$date), FUN=mean, na.rm=TRUE)
names(i)
View(i)
a$dayname <- weekdays(as.Date(a$date))
a$weekend <- "FALSE"
a$weekend <- ifelse(a$dayname %in% c("Saturday", "Sunday"), "TRUE", "FALSE")
wk <- subset(a, a$weekend=="FALSE")
i.wk <-aggregate(wk$steps, by=list(wk$interval, wk$weekend), FUN=mean, na.rm=TRUE)
colnames(i.wk) <- c("interval", "meansteps", "weekend")
wkend <-subset(a, a$weekend=="TRUE")
i.wkend <-aggregate(wkend$steps, by=list(wkend$interval, wkend$weekend), FUN=mean, na.rm=TRUE)
colnames(i.wkend) <- c("interval", "meansteps", "weekend")
p <- rbind(i.wk, i.wkend)
nrow(p)
nrow(i)
xyplot(p$meansteps ~ p$interval | p$weekend,
data = p,
type = "l",
lty = c(1, 2, 2, 1),
lwd = c(1, 1, 1, 3),
col.line = c(rep("black",3), "red"))
View(p)
wk <- subset(a, a$weekend=="FALSE")
i.wk <-aggregate(wk$steps, by=list(wk$interval, wk$weekend), FUN=mean, na.rm=TRUE)
View(i.wk)
a$dayname <- weekdays(as.Date(a$date))
a$weekend <- "FALSE"
a$weekend <- ifelse(a$dayname %in% c("Saturday", "Sunday"), "TRUE", "FALSE")
wk <- subset(a, a$weekend=="FALSE")
i.wk <-aggregate(wk$steps, by=list(wk$interval, wk$weekend), FUN=mean, na.rm=TRUE)
colnames(i.wk) <- c("interval", "weekend", "meansteps")
wkend <-subset(a, a$weekend=="TRUE")
i.wkend <-aggregate(wkend$steps, by=list(wkend$interval, wkend$weekend), FUN=mean, na.rm=TRUE)
colnames(i.wkend) <- c("interval", "weekend", "meansteps")
p <- rbind(i.wk, i.wkend)
nrow(p)
wk <- subset(a, a$weekend=="FALSE")
i.wk <-aggregate(wk$steps, by=list(wk$interval, wk$weekend), FUN=mean, na.rm=TRUE)
colnames(i.wk) <- c("interval", "weekend", "meansteps")
View(i.wk)
View(p)
xyplot(p$meansteps ~ p$interval | p$weekend,
data = p,
type = "l",
lty = c(1, 2, 2, 1),
lwd = c(1, 1, 1, 3),
col.line = c(rep("black",3), "red"))
xyplot(p$meansteps ~ p$interval | p$weekend,
data = p,
type = "l")
xyplot(p$meansteps ~ p$interval | p$weekend,
data = p,
type = "l",
xlab = "interval",
ylab = "mean number of steps",
main = "Average number of steps"
)
View(imp.r)
str(p)
p$weekend <- as.factor(p$weekend)
xyplot(p$meansteps ~ p$interval | p$weekend,
data = p,
type = "l",
xlab = "interval",
ylab = "mean number of steps",
main = "Average number of steps",
,groups=factor(weekend,labels=c("weekend","weekday")
)
xyplot(p$meansteps ~ p$interval | p$weekend,
data = p,
type = "l",
xlab = "interval",
ylab = "mean number of steps",
main = "Average number of steps",
,groups=factor(weekend,labels=c("weekend","weekday")
xyplot(p$meansteps ~ p$interval | p$weekend,
data = p,
type = "l",
xlab = "interval",
ylab = "mean number of steps",
main = "Average number of steps",
groups=factor(weekend,labels=c("weekend","weekday")
)
xyplot(p$meansteps ~ p$interval | p$weekend,
data = p,
type = "l",
xlab = "interval",
ylab = "mean number of steps",
main = "Average number of steps",
groups=factor(weekend,labels=c("weekend","weekday")
))
xyplot(p$meansteps ~ p$interval | p$weekend,
data = p,
type = "l",
xlab = "interval",
ylab = "mean number of steps",
main = "Average number of steps")
a$dayname <- weekdays(as.Date(a$date))
a$weekend <- "FALSE"
a$weekend <- ifelse(a$dayname %in% c("Saturday", "Sunday"), "weekend", "weekday")
wk <- subset(a, a$weekend=="weekday")
i.wk <-aggregate(wk$steps, by=list(wk$interval, wk$weekend), FUN=mean, na.rm=TRUE)
colnames(i.wk) <- c("interval", "weekend", "meansteps")
wkend <-subset(a, a$weekend=="weekend")
i.wkend <-aggregate(wkend$steps, by=list(wkend$interval, wkend$weekend), FUN=mean, na.rm=TRUE)
colnames(i.wkend) <- c("interval", "weekend", "meansteps")
p <- rbind(i.wk, i.wkend)
p$weekend <- as.factor(p$weekend)
xyplot(p$meansteps ~ p$interval | p$weekend,
data = p,
type = "l",
xlab = "interval",
ylab = "mean number of steps",
main = "Average number of steps")
```
xyplot(p$meansteps ~ p$interval | p$weekend,
data = p,
type = "l",
xlab = "interval",
ylab = "mean number of steps",
main = "Average number of steps",
layout=c(2,1))
xyplot(p$meansteps ~ p$interval | p$weekend,
data = p,
type = "l",
xlab = "interval",
ylab = "mean number of steps",
main = "Average number of steps",
layout=c(2,1))
xyplot(p$meansteps ~ p$interval | p$weekend,
data = p,
type = "l",
xlab = "interval",
ylab = "mean number of steps",
main = "Average number of steps",
layout=c(1,1))
xyplot(p$meansteps ~ p$interval | p$weekend,
data = p,
type = "l",
xlab = "interval",
ylab = "mean number of steps",
main = "Average number of steps",
layout=c(1,2))
