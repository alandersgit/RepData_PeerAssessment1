{
    "contents" : "---\ntitle: \"Peer-graded Assignment: Course Project 1\"  \noutput: html_document\n---\n```{r global_options, include=FALSE}\nknitr::opts_chunk$set(fig.width=12, fig.height=8, fig.path='Figs/',\n                      echo=TRUE, warning=FALSE, message=FALSE)\n#prevent output in scientific notation\noptions(scipen=999)\n```\nCode for reading in the dataset and/or processing the data  \n```{r, echo=TRUE}\nlibrary(lattice)\n\n\nsetwd('C://MOOC//ReproducibleResearch//')\na <- read.csv('activity.csv')\n#calculate number of steps per day\nr <-aggregate(a$steps, by=list(a$date), FUN=sum, na.rm=TRUE)\ncolnames(r) <- c(\"date\", \"StepsPerDay\")\n#calculate mean value for each interval\ni <-aggregate(a$steps, by=list(a$interval), FUN=mean, na.rm=TRUE)\ncolnames(i) <- c(\"interval\", \"meansteps\")\n```\n\nHistogram of the total number of steps taken each day \n```{r, echo=TRUE}\nhist(r$StepsPerDay,\n     main=\"Total number of steps taken each day\",\n     xlab=\"steps\",\n     breaks=nrow(r))\n```\n\n\n```{r, echo=TRUE}\nme <- mean(r$StepsPerDay[r$StepsPerDay!=0])\nmed <- median(r$StepsPerDay[r$StepsPerDay!=0])\n```\nMean `r me` and median number `r med` of steps taken each day  \n\nTime series plot of the average number of steps taken \n```{r, echo=TRUE}\nplot(i$interval, i$meansteps, main='Average number of steps taken in an interval', xlab='interval', ylab='Average number of steps', type='l')\n\n```\n \n```{r, echo=TRUE}\nIntAvgMax <- subset(i, i$meansteps==max(i$meansteps))\n```\nThe 5-minute interval that, on average, contains the maximum number of steps is `r IntAvgMax$interval`\n\n```{r, echo=TRUE}\n#missing values\nnmv <- length(a$steps[a$steps=='NA'])\n#impute mean value for interval if NA\nimp <- a\nimp <- merge(a, i, by=\"interval\")\nimp$steps <- ifelse(is.na(imp$steps), imp$meansteps, imp$steps)\n#calculate steps per day\nimp.r <-aggregate(imp$steps, by=list(imp$date), FUN=sum, na.rm=TRUE)\ncolnames(imp.r) <- c(\"date\", \"StepsPerDay\")\nimp.me <- mean(imp.r$StepsPerDay[imp.r$StepsPerDay!=0])\nimp.med <- median(imp.r$StepsPerDay[imp.r$StepsPerDay!=0])\n```\nThe total number of missing steps, steps=NA, in the dataset is `r nmv` \nMissing step values have been replaced by the average number of steps for that interval.  \nAfter imputation, Mean `r imp.me` and median number `r imp.med` of steps taken each day  \nHistogram of the total number of steps taken each day after missing values are imputed  \n```{r, echo=TRUE}\nhist(imp.r$StepsPerDay,\n     main=\"Total number of steps taken each day (after imputation)\",\n     xlab=\"steps\",\n     breaks=nrow(imp.r))\n```\n\nPanel plot comparing the average number of steps taken per 5-minute interval across weekdays and weekends \n```{r, echo=TRUE}\na$dayname <- weekdays(as.Date(a$date))\na$weekend <- \"FALSE\"\na$weekend <- ifelse(a$dayname %in% c(\"Saturday\", \"Sunday\"), \"weekend\", \"weekday\")\nwk <- subset(a, a$weekend==\"weekday\")\ni.wk <-aggregate(wk$steps, by=list(wk$interval, wk$weekend), FUN=mean, na.rm=TRUE)\ncolnames(i.wk) <- c(\"interval\", \"weekend\", \"meansteps\")\nwkend <-subset(a, a$weekend==\"weekend\")\ni.wkend <-aggregate(wkend$steps, by=list(wkend$interval, wkend$weekend), FUN=mean, na.rm=TRUE)\ncolnames(i.wkend) <- c(\"interval\", \"weekend\", \"meansteps\")\n\np <- rbind(i.wk, i.wkend)\np$weekend <- as.factor(p$weekend)\nxyplot(p$meansteps ~ p$interval | p$weekend,\n       data = p,\n       type = \"l\",\n       xlab = \"interval\",\n       ylab = \"mean number of steps\",\n       main = \"Average number of steps in an interval\",\n       layout=c(1,2))\n```\n",
    "created" : 1478284398866.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2566624693",
    "id" : "C4BFA9EC",
    "lastKnownWriteTime" : 1478384155,
    "path" : "C:/MOOC/ReproducibleResearch/PA1_template.Rmd",
    "project_path" : "PA1_template.Rmd",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "type" : "r_markdown"
}